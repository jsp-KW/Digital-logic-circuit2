`timescale 1ns/100ps

module tb_read_operation;
  reg [31:0] tb_from_reg0, tb_from_reg1, tb_from_reg2, tb_from_reg3, tb_from_reg4, tb_from_reg5, tb_from_reg6, tb_from_reg7;
  reg [2:0] tb_Addr;
  wire [31:0] tb_Data;
  
  read_operation test_read_operation (
    .Addr(tb_Addr),
    .Data(tb_Data),
    .from_reg0(tb_from_reg0),
    .from_reg1(tb_from_reg1),
    .from_reg2(tb_from_reg2),
    .from_reg3(tb_from_reg3),
    .from_reg4(tb_from_reg4),
    .from_reg5(tb_from_reg5),
    .from_reg6(tb_from_reg6),
    .from_reg7(tb_from_reg7)
  );

  initial begin
    // Initialize from_reg0~7
    tb_from_reg0 = 32'h0000_0000;
    tb_from_reg1 = 32'h0000_0001;
    tb_from_reg2 = 32'h0000_0002;
    tb_from_reg3 = 32'h0000_0003;
    tb_from_reg4 = 32'h0000_0004;
    tb_from_reg5 = 32'h0000_0005;
    tb_from_reg6 = 32'h0000_0006;
    tb_from_reg7 = 32'h0000_0007;
  end

  initial begin
    #40; // Wait for 30ns

    //Change the address and observe the output
    tb_Addr = 3'b000; #10;
    tb_Addr = 3'b001; #10;
    tb_Addr = 3'b010; #10;
    tb_Addr = 3'b011; #10;
    tb_Addr = 3'b100; #10;
    tb_Addr = 3'b101; #10;
    tb_Addr = 3'b110; #10;
    tb_Addr = 3'b111; #10;

    $finish; 
  end
endmodule
