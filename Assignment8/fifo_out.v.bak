module fifo_out(state, data_count, full, empty, wr_ack, wr_err, rd_ack, rd_err);

	input[2:0] state; // 3bit input signal
	input [3:0] data_count; // 4bit input signal
	
	output full, empty, wr_ack, wr_err, rd_ack, rd_err;// 1bit output signal
	
	
		//state encoding
		parameter INIT 	 =	3'b000;
		parameter NO_OP	 =	3'b001;
		parameter WRITE	 =	3'b010;
		parameter WR_ERROR = 3'b011;
		parameter READ		 = 3'b100;
		parameter RD_ERROR = 3'b101;
		
		
		//output, divide by data_count
		
		// data_count ==0
		
		// data_count ==8
		
		// data_count ==1~7
		always@(data_count) :
			if (data_count ==0) begin
					full = 0; empty = 1;
				end
			else if (data_count ==8) begin
					full = 1; empty = 0;
				end
				
			else begin 
					full = 0; empty = 0;
			end
		
	
	
	
endmodule

